version: '3.8'

services:
  auth-service:
    image: traefik/whoami
    container_name: auth-service
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-service.rule=Host(`auth.microservices.local`)"
      - "traefik.http.routers.auth-service.entrypoints=web"
      - "traefik.http.services.auth-service.loadbalancer.server.port=80"
      - "traefik.http.middlewares.auth-middleware.basicauth.users=admin:$$2y$$10$$..."
    networks:
      - microservices-network
      - shared-network

  user-service:
    image: traefik/whoami
    container_name: user-service
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-service.rule=Host(`users.microservices.local`)"
      - "traefik.http.routers.user-service.entrypoints=web"
      - "traefik.http.services.user-service.loadbalancer.server.port=80"
    networks:
      - microservices-network

  notification-service:
    image: traefik/whoami
    container_name: notification-service
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.notification-service.rule=Host(`notifications.microservices.local`)"
      - "traefik.http.routers.notification-service.entrypoints=web"
      - "traefik.http.services.notification-service.loadbalancer.server.port=80"
    networks:
      - microservices-network

  message-queue:
    image: traefik/whoami
    container_name: message-queue
    restart: unless-stopped
    labels:
      - "traefik.enable=false"
    networks:
      - microservices-network
      - backend-network

networks:
  microservices-network:
    driver: bridge
    name: microservices-network
  backend-network:
    driver: bridge
    name: backend-network
  shared-network:
    external: true
    name: shared-network